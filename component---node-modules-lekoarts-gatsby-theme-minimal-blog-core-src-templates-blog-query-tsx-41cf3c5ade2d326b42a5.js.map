{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/title.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","BlogListItem","post","showTags","mb","sx","fontSize","color","title","mt","a","date","Listing","posts","className","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontWeight","isMDXComponent","Blog","alignItems","justifyContent","flexFlow","variant","marginY","BlogComponent","allPost","data","nodes"],"mappings":"2FAAA,yEA8BeA,IAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAClB,EAA+BC,cAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAD,CAAOG,GAAIC,OAAMC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BI,EAAIG,OACjEH,EAAIQ,a,6GCkBFC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAD,CAAOR,GAAIC,OAAMC,GAAII,EAAKP,KAAMU,GAAI,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAC/DL,EAAKM,OAER,iBAAGH,GAAI,CAAEE,MAAO,YAAaE,GAAI,EAAGC,EAAG,CAAEH,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOJ,EAAKS,MACXT,EAAKhB,MAAQiB,GACZ,YAAC,IAAMb,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMgB,EAAKhB,WCJhB0B,IARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,iBAAV,eAA0BX,gBAA1B,gBACd,uBAASE,GAAI,CAAED,GAAI,CAAC,EAAG,EAAG,IAAMU,UAAWA,GACxCD,EAAMtB,KAAI,SAACW,GAAD,OACT,YAAC,EAAD,CAAcR,IAAKQ,EAAKP,KAAMO,KAAMA,EAAMC,SAAUA,U,6CCfpCH,E,6IAKhBe,GALgBf,EAKK,OALG,SAA6BgB,GAEzD,OADAC,QAAQC,KAAK,aAAelB,EAAO,2EAC5B,oBAASgB,KAIZG,EAAc,CAClBC,aAT0B,IAYb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,cALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAC5E,cAACR,EAAD,CAAMV,GAAI,CACRC,SAAU,CAAC,EAAG,EAAG,GACjBkB,WAAY,OACZjB,MAAO,WACNgB,QAAQ,QAJX,yBAWJF,EAAWI,gBAAiB,ECP5B,IAqBeC,EArBF,SAAC,GAA0B,IAAxBb,EAAwB,EAAxBA,MACd,EAA+B1B,cAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKmB,MAAM,oBACX,YAAC,IAAD,CAAMH,GAAI,CAAEsB,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,EAAD,MACA,YAAC,IAAD,CACEjC,GAAIC,OACJQ,GAAI,CAAEyB,QAAS,kBAAmBC,QAAS,GAC3CjC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,IAHrC,kBAQF,YAAC,IAAD,CAASyB,MAAOA,EAAOR,GAAI,CAAEI,GAAI,CAAC,EAAG,QCzC5BuB,UCQA,YAAkD,IAAhBhB,EAAgB,oBAErDiB,EACNjB,EADFkB,KAAQD,QAGV,OAAO,kBAAC,EAAD,eAAMpB,MAAOoB,EAAQE,OAAWnB","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-41cf3c5ade2d326b42a5.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  My Work Experiences.\n    </Text>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { Flex } from \"@theme-ui/components\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\n// @ts-ignore\nimport Title from \"../texts/title\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title=\"Work Experience\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Title />\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n"],"sourceRoot":""}